
module SPRpe # rubocop:disable Documentation

  # return the IPv4 (default) address of the given interface.
  #
  # @param [String] interface The interface to query.
  # @param [String] family The protocol family to use.
  # @return [String] The address or nil if not found
  def net_dev(interface, family='inet')
    interface_node = node['network']['interfaces'][interface]['addresses']
    interface_node.select do |address, data|
      return address if data['family'] == family
    end
    return nil
  end

  # return the device of the given MAC/ip address.
  #
  # @param [String] MAC address.
  # @param [String] lladdr to get MAC, ifnet to get IP (defaults=lladdr)
  # @return [String] The device or nil if not found
  def dev_addr(mac, family='lladdr')
    interface_node = node['network']['interfaces']
    addr = mac.downcase
    interface_node.select do |dev, data|
      data['addresses'].select do |id, prop|
	return dev if id.downcase == addr && prop['family'] == family
      end
    end
    return nil
  end

  # return true if the file was modified, false otherwise
  #
  # @param [String] MAC address.
  # @param [String] device (eth0)
  # @param [bool] true to allow the creation of the udev file
  # @param [String] the udev file, defaults to 70-persistent-net.rules
  # @return [bool] result
  def net_udev(mac, device, create=true, udev='/etc/udev/rules.d/70-persistent-net.rules')
    lines = []
    updates = false
    type = device.gsub(/\d+/, '\*')
    begin
      File.open(udev, 'r') do |f|
	lines = f.readlines
	lines.each do |line|
	   if line =~ /^SUBSYSTEM=="net".*ATTR{address}=="#{mac}".*KERNEL=="#{type}".*/
	      line.gsub!(/NAME=".*"/, "NAME=\"#{device}\"")
	      updates = true
	      Chef::Log.info("Updating udev: #{device} <~> #{mac}")
	      break
	   end
	end
      end
    rescue Exception
      lines.push("# This file was automatically generated by Chef")
      Chef::Log.info("Creating new file '#{udev}'")
    end
    if create && !updates
      type = device.gsub(/\d+/, '*')
      lines.push("")
      lines.push("# Device generated by Chef")
      line = "SUBSYSTEM==\"net\", "
      line << "ACTION==\"add\", "
      line << "DRIVERS==\"?*\", "
      line << "ATTR{address}==\"#{mac}\", "
      line << "ATTR{dev_id}==\"0x0\", "
      line << "ATTR{type}==\"1\", "
      line << "KERNEL==\"#{type}\", "
      line << "NAME=\"#{device}\""
      lines.push(line)
      updates = true
    end
    if updates
      begin
        File.open(udev, 'w') do |f|
	  lines.each do |line|
	    f.puts line
	  end
        end
      rescue Exception
        Chef::Log.fatal("Cannot write '#{udev}'")
      end
      return true
    end
    return false
  end

end

